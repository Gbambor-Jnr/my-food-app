{"ast":null,"code":"var _jsxFileName = \"/Users/gbamborjnr/Documents/REACT PROJECTS/Miracool App/src/Components/Store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./food-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultValue = {\n  items: [],\n  totalAmount: 0\n};\n\nconst reducer = (state, action) => {\n  //   console.log(action, state, \"I am logging in reducer\");\n  if (action.type === \"ADD\") {\n    const updatedAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingItem = state.items[existingCartIndex];\n    let updatedItems;\n\n    if (existingItem) {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const index = state.items.findIndex(item => item.id === action.id);\n    const articles = state.items[index];\n    const updatedAmount = state.totalAmount - articles.price;\n    let updatedItems;\n\n    if (articles.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== articles.id);\n    } else {\n      const updatedItem = { ...articles,\n        amount: articles.amount - 1\n      };\n      updatedItems = { ...state.items\n      };\n      updatedItems[index] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedAmount\n    };\n  }\n\n  return defaultValue;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartState] = useReducer(reducer, defaultValue);\n\n  const addItemHandler = item => {\n    console.log(item, \"item logger\");\n    dispatchCartState({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartState({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartValue = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItems: addItemHandler,\n    removeItems: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"Pt+qzqrV17qID7mwhEdayoD7Kzc=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/gbamborjnr/Documents/REACT PROJECTS/Miracool App/src/Components/Store/CartProvider.js"],"names":["useReducer","CartContext","defaultValue","items","totalAmount","reducer","state","action","type","updatedAmount","item","price","amount","existingCartIndex","findIndex","id","existingItem","updatedItems","updatedItem","concat","index","articles","filter","CartProvider","props","cartState","dispatchCartState","addItemHandler","console","log","removeItemHandler","cartValue","addItems","removeItems","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\nimport CartContext from \"./food-context\";\n\nconst defaultValue = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst reducer = (state, action) => {\n  //   console.log(action, state, \"I am logging in reducer\");\n  if (action.type === \"ADD\") {\n    const updatedAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n    const existingCartIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n    const existingItem = state.items[existingCartIndex];\n    let updatedItems;\n    if (existingItem) {\n      const updatedItem = {\n        ...existingItem,\n        amount: existingItem.amount + action.item.amount,\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n    return { items: updatedItems, totalAmount: updatedAmount };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const index = state.items.findIndex((item) => item.id === action.id);\n\n    const articles = state.items[index];\n    const updatedAmount = state.totalAmount - articles.price;\n    let updatedItems;\n    if (articles.amount === 1) {\n      updatedItems = state.items.filter((item) => item.id !== articles.id);\n    } else {\n      const updatedItem = { ...articles, amount: articles.amount - 1 };\n      updatedItems = { ...state.items };\n      updatedItems[index] = updatedItem;\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedAmount,\n    };\n  }\n  return defaultValue;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartState] = useReducer(reducer, defaultValue);\n\n  const addItemHandler = (item) => {\n    console.log(item, \"item logger\");\n    dispatchCartState({ type: \"ADD\", item: item });\n  };\n\n  const removeItemHandler = (id) => {\n    dispatchCartState({ type: \"REMOVE\", id: id });\n  };\n\n  const cartValue = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItems: addItemHandler,\n    removeItems: removeItemHandler,\n  };\n  return (\n    <CartContext.Provider value={cartValue}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}